//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXDrawerLayout\src\main\java\androidx\drawerlayout\widget\DrawerLayout.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DrawerLayout")
#ifdef RESTRICT_DrawerLayout
#define INCLUDE_ALL_DrawerLayout 0
#else
#define INCLUDE_ALL_DrawerLayout 1
#endif
#undef RESTRICT_DrawerLayout

#if !defined (ADXDrawerLayout_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout))
#define ADXDrawerLayout_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADView;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;
@protocol ADXDrawerLayout_DrawerListener;

@interface ADXDrawerLayout : ADViewGroup

#pragma mark Public

- (instancetype)init;

- (void)addDrawerListenerWithADXDrawerLayout_DrawerListener:(id<ADXDrawerLayout_DrawerListener>)listener;

- (void)closeDrawerWithInt:(int32_t)gravity;

- (void)closeDrawerWithInt:(int32_t)gravity
               withBoolean:(bool)animate;

- (void)closeDrawerWithADView:(ADView *)drawerView;

- (void)closeDrawerWithADView:(ADView *)drawerView
                  withBoolean:(bool)animate;

- (int32_t)getDrawerLockModeWithInt:(int32_t)edgeGravity;

- (int32_t)getDrawerLockModeWithADView:(ADView *)drawerView;

- (bool)isDrawerOpenWithInt:(int32_t)drawerGravity;

- (bool)isDrawerOpenWithADView:(ADView *)drawer;

- (bool)isOpeningWithADView:(ADView *)drawerView;

- (bool)isViewContentViewWithADView:(ADView *)view;

- (void)moveDrawerViewToOffsetWithADView:(ADView *)drawerView
                               withFloat:(float)slideOffset;

- (void)onViewPositionChangedWithADView:(ADView *)changedView
                                withInt:(int32_t)left
                                withInt:(int32_t)top
                                withInt:(int32_t)dx
                                withInt:(int32_t)dy;

- (void)openDrawerWithInt:(int32_t)gravity;

- (void)openDrawerWithInt:(int32_t)gravity
              withBoolean:(bool)animate;

- (void)openDrawerWithADView:(ADView *)drawerView;

- (void)openDrawerWithADView:(ADView *)drawerView
                 withBoolean:(bool)animate;

- (void)removeDrawerListenerWithADXDrawerLayout_DrawerListener:(id<ADXDrawerLayout_DrawerListener>)listener;

- (bool)requiresToBeOnScreenWithADView:(ADView *)view;

- (void)setDrawerListenerWithADXDrawerLayout_DrawerListener:(id<ADXDrawerLayout_DrawerListener>)listener;

- (void)setDrawerLockModeWithInt:(int32_t)lockMode;

- (void)setDrawerLockModeWithInt:(int32_t)lockMode
                         withInt:(int32_t)edgeGravity;

- (void)setDrawerLockModeWithInt:(int32_t)lockMode
                      withADView:(ADView *)drawerView;

- (void)smoothSlideViewToWithADView:(ADView *)drawerView
                            withInt:(int32_t)x
                            withInt:(int32_t)y;

- (void)updateDrawerViewStateWithInt:(int32_t)activeState
                          withADView:(ADView *)activeDrawer;

#pragma mark Protected

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)l
                    withInt:(int32_t)t
                    withInt:(int32_t)r
                    withInt:(int32_t)b;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

#pragma mark Package-Private

- (bool)checkDrawerViewAbsoluteGravityWithADView:(ADView *)drawerView
                                         withInt:(int32_t)checkFor;

- (void)dispatchOnDrawerClosedWithADView:(ADView *)drawerView;

- (void)dispatchOnDrawerOpenedWithADView:(ADView *)drawerView;

- (void)dispatchOnDrawerSlideWithADView:(ADView *)drawerView
                              withFloat:(float)slideOffset;

- (ADView *)findDrawerWithGravityWithInt:(int32_t)gravity;

- (int32_t)getDrawerViewAbsoluteGravityWithADView:(ADView *)drawerView;

- (float)getDrawerViewOffsetWithADView:(ADView *)drawerView;

+ (NSString *)gravityToStringWithInt:(int32_t)gravity;

- (bool)isContentViewWithADView:(ADView *)child;

- (bool)isDrawerViewWithADView:(ADView *)child;

- (void)moveDrawerToOffsetWithADView:(ADView *)drawerView
                           withFloat:(float)slideOffset;

- (void)setDrawerViewOffsetWithADView:(ADView *)drawerView
                            withFloat:(float)slideOffset;

- (void)setFlagStateOpenedWithADView:(ADView *)drawerView;

- (void)updateDrawerStateWithInt:(int32_t)activeState
                      withADView:(ADView *)activeDrawer;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout)

inline int32_t ADXDrawerLayout_get_STATE_IDLE(void);
#define ADXDrawerLayout_STATE_IDLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, STATE_IDLE, int32_t)

inline int32_t ADXDrawerLayout_get_STATE_DRAGGING(void);
#define ADXDrawerLayout_STATE_DRAGGING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, STATE_DRAGGING, int32_t)

inline int32_t ADXDrawerLayout_get_STATE_SETTLING(void);
#define ADXDrawerLayout_STATE_SETTLING 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, STATE_SETTLING, int32_t)

inline int32_t ADXDrawerLayout_get_LOCK_MODE_UNLOCKED(void);
#define ADXDrawerLayout_LOCK_MODE_UNLOCKED 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_UNLOCKED, int32_t)

inline int32_t ADXDrawerLayout_get_LOCK_MODE_LOCKED_CLOSED(void);
#define ADXDrawerLayout_LOCK_MODE_LOCKED_CLOSED 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_LOCKED_CLOSED, int32_t)

inline int32_t ADXDrawerLayout_get_LOCK_MODE_LOCKED_OPEN(void);
#define ADXDrawerLayout_LOCK_MODE_LOCKED_OPEN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_LOCKED_OPEN, int32_t)

inline int32_t ADXDrawerLayout_get_LOCK_MODE_UNDEFINED(void);
#define ADXDrawerLayout_LOCK_MODE_UNDEFINED 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_UNDEFINED, int32_t)

inline bool ADXDrawerLayout_get_CAN_HIDE_DESCENDANTS(void);
#define ADXDrawerLayout_CAN_HIDE_DESCENDANTS true
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, CAN_HIDE_DESCENDANTS, bool)

FOUNDATION_EXPORT NSString *ADXDrawerLayout_gravityToStringWithInt_(int32_t gravity);

FOUNDATION_EXPORT void ADXDrawerLayout_init(ADXDrawerLayout *self);

FOUNDATION_EXPORT ADXDrawerLayout *new_ADXDrawerLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout *create_ADXDrawerLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout)

@compatibility_alias AndroidxDrawerlayoutWidgetDrawerLayout ADXDrawerLayout;


#endif

#if !defined (ADXDrawerLayout_DrawerListener_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_DrawerListener))
#define ADXDrawerLayout_DrawerListener_

@class ADView;
@class JavaLangFloat;
@class JavaLangInteger;

@protocol ADXDrawerLayout_DrawerListener < JavaObject >

- (void)onDrawerSlideWithADView:(ADView *)drawerView
                      withFloat:(float)slideOffset;

- (void)onDrawerOpenedWithADView:(ADView *)drawerView;

- (void)onDrawerClosedWithADView:(ADView *)drawerView;

- (void)onDrawerStateChangedWithInt:(int32_t)newState;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_DrawerListener)

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_DrawerListener)


#endif

#if !defined (ADXDrawerLayout_LayoutParams_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_LayoutParams))
#define ADXDrawerLayout_LayoutParams_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup_MarginLayoutParams 1
#include "ViewGroup.h"

@class ADViewGroup_LayoutParams;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;

@interface ADXDrawerLayout_LayoutParams : ADViewGroup_MarginLayoutParams {
 @public
  int32_t gravity_;
  float onScreen_;
  bool isPeeking_;
  int32_t openState_;
}

#pragma mark Public

- (instancetype)initWithInt:(int32_t)width
                    withInt:(int32_t)height;

- (instancetype)initWithInt:(int32_t)width
                    withInt:(int32_t)height
                    withInt:(int32_t)gravity;

- (instancetype)initWithADXDrawerLayout_LayoutParams:(ADXDrawerLayout_LayoutParams *)source;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)source;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADViewGroup_MarginLayoutParams:(ADViewGroup_MarginLayoutParams *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_LayoutParams)

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithInt_withInt_(ADXDrawerLayout_LayoutParams *self, int32_t width, int32_t height);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithInt_withInt_(int32_t width, int32_t height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithInt_withInt_(int32_t width, int32_t height);

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithInt_withInt_withInt_(ADXDrawerLayout_LayoutParams *self, int32_t width, int32_t height, int32_t gravity);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithInt_withInt_withInt_(int32_t width, int32_t height, int32_t gravity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithInt_withInt_withInt_(int32_t width, int32_t height, int32_t gravity);

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithADXDrawerLayout_LayoutParams_(ADXDrawerLayout_LayoutParams *self, ADXDrawerLayout_LayoutParams *source);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithADXDrawerLayout_LayoutParams_(ADXDrawerLayout_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithADXDrawerLayout_LayoutParams_(ADXDrawerLayout_LayoutParams *source);

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADXDrawerLayout_LayoutParams *self, ADViewGroup_LayoutParams *source);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_LayoutParams)


#endif

#if !defined (ADXDrawerLayout_ViewDragHelper_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_ViewDragHelper))
#define ADXDrawerLayout_ViewDragHelper_

@class ADContext;
@class ADView;
@class ADXDrawerLayout;
@class JavaLangInteger;

@interface ADXDrawerLayout_ViewDragHelper : NSObject

#pragma mark Public

- (instancetype)initWithADXDrawerLayout:(ADXDrawerLayout *)outer$
                          withADContext:(ADContext *)context;

- (void)cancel;

- (int32_t)getDefaultEdgeSize;

- (int32_t)getViewDragState;

- (void)setEdgeSizeWithInt:(int32_t)size;

- (void)smoothSlideViewToWithADView:(ADView *)drawerView
                            withInt:(int32_t)x
                            withInt:(int32_t)y;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_ViewDragHelper)

inline int32_t ADXDrawerLayout_ViewDragHelper_get_STATE_IDLE(void);
#define ADXDrawerLayout_ViewDragHelper_STATE_IDLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout_ViewDragHelper, STATE_IDLE, int32_t)

inline int32_t ADXDrawerLayout_ViewDragHelper_get_STATE_DRAGGING(void);
#define ADXDrawerLayout_ViewDragHelper_STATE_DRAGGING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout_ViewDragHelper, STATE_DRAGGING, int32_t)

inline int32_t ADXDrawerLayout_ViewDragHelper_get_STATE_SETTLING(void);
#define ADXDrawerLayout_ViewDragHelper_STATE_SETTLING 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout_ViewDragHelper, STATE_SETTLING, int32_t)

FOUNDATION_EXPORT void ADXDrawerLayout_ViewDragHelper_initWithADXDrawerLayout_withADContext_(ADXDrawerLayout_ViewDragHelper *self, ADXDrawerLayout *outer$, ADContext *context);

FOUNDATION_EXPORT ADXDrawerLayout_ViewDragHelper *new_ADXDrawerLayout_ViewDragHelper_initWithADXDrawerLayout_withADContext_(ADXDrawerLayout *outer$, ADContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_ViewDragHelper *create_ADXDrawerLayout_ViewDragHelper_initWithADXDrawerLayout_withADContext_(ADXDrawerLayout *outer$, ADContext *context);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_ViewDragHelper)


#endif

#if !defined (ADXDrawerLayout_WindowInsetsCompat_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_WindowInsetsCompat))
#define ADXDrawerLayout_WindowInsetsCompat_

@class ADInsets;
@class ADXDrawerLayout;
@class JavaLangInteger;

@interface ADXDrawerLayout_WindowInsetsCompat : NSObject

#pragma mark Public

- (ADInsets *)getSystemGestureInsets;

- (int32_t)getSystemWindowInsetBottom;

- (int32_t)getSystemWindowInsetLeft;

- (int32_t)getSystemWindowInsetRight;

- (int32_t)getSystemWindowInsetTop;

- (ADXDrawerLayout_WindowInsetsCompat *)replaceSystemWindowInsetsWithInt:(int32_t)systemWindowInsetLeft
                                                                 withInt:(int32_t)systemWindowInsetTop
                                                                 withInt:(int32_t)systemWindowInsetRight
                                                                 withInt:(int32_t)systemWindowInsetBottom;

#pragma mark Package-Private

- (instancetype)initWithADXDrawerLayout:(ADXDrawerLayout *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_WindowInsetsCompat)

FOUNDATION_EXPORT void ADXDrawerLayout_WindowInsetsCompat_initWithADXDrawerLayout_(ADXDrawerLayout_WindowInsetsCompat *self, ADXDrawerLayout *outer$);

FOUNDATION_EXPORT ADXDrawerLayout_WindowInsetsCompat *new_ADXDrawerLayout_WindowInsetsCompat_initWithADXDrawerLayout_(ADXDrawerLayout *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_WindowInsetsCompat *create_ADXDrawerLayout_WindowInsetsCompat_initWithADXDrawerLayout_(ADXDrawerLayout *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_WindowInsetsCompat)


#endif

#pragma pop_macro("INCLUDE_ALL_DrawerLayout")
